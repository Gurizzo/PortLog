//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.ServiceReferenceProducto {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductoDTO", Namespace="http://schemas.datacontract.org/2004/07/Servicio.DTO")]
    [System.SerializableAttribute()]
    public partial class ProductoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceProducto.IServicioProducto")]
    public interface IServicioProducto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/AltaProducto", ReplyAction="http://tempuri.org/IServicioProducto/AltaProductoResponse")]
        bool AltaProducto(MVC.ServiceReferenceProducto.ProductoDTO producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/AltaProducto", ReplyAction="http://tempuri.org/IServicioProducto/AltaProductoResponse")]
        System.Threading.Tasks.Task<bool> AltaProductoAsync(MVC.ServiceReferenceProducto.ProductoDTO producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/BajaProducto", ReplyAction="http://tempuri.org/IServicioProducto/BajaProductoResponse")]
        bool BajaProducto(int productoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/BajaProducto", ReplyAction="http://tempuri.org/IServicioProducto/BajaProductoResponse")]
        System.Threading.Tasks.Task<bool> BajaProductoAsync(int productoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/ModificarProducto", ReplyAction="http://tempuri.org/IServicioProducto/ModificarProductoResponse")]
        bool ModificarProducto(MVC.ServiceReferenceProducto.ProductoDTO producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/ModificarProducto", ReplyAction="http://tempuri.org/IServicioProducto/ModificarProductoResponse")]
        System.Threading.Tasks.Task<bool> ModificarProductoAsync(MVC.ServiceReferenceProducto.ProductoDTO producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/TraerTodos", ReplyAction="http://tempuri.org/IServicioProducto/TraerTodosResponse")]
        MVC.ServiceReferenceProducto.ProductoDTO[] TraerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/TraerTodos", ReplyAction="http://tempuri.org/IServicioProducto/TraerTodosResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReferenceProducto.ProductoDTO[]> TraerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/BuscarProducto", ReplyAction="http://tempuri.org/IServicioProducto/BuscarProductoResponse")]
        MVC.ServiceReferenceProducto.ProductoDTO BuscarProducto(int productoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioProducto/BuscarProducto", ReplyAction="http://tempuri.org/IServicioProducto/BuscarProductoResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReferenceProducto.ProductoDTO> BuscarProductoAsync(int productoId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioProductoChannel : MVC.ServiceReferenceProducto.IServicioProducto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioProductoClient : System.ServiceModel.ClientBase<MVC.ServiceReferenceProducto.IServicioProducto>, MVC.ServiceReferenceProducto.IServicioProducto {
        
        public ServicioProductoClient() {
        }
        
        public ServicioProductoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioProductoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioProductoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioProductoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AltaProducto(MVC.ServiceReferenceProducto.ProductoDTO producto) {
            return base.Channel.AltaProducto(producto);
        }
        
        public System.Threading.Tasks.Task<bool> AltaProductoAsync(MVC.ServiceReferenceProducto.ProductoDTO producto) {
            return base.Channel.AltaProductoAsync(producto);
        }
        
        public bool BajaProducto(int productoId) {
            return base.Channel.BajaProducto(productoId);
        }
        
        public System.Threading.Tasks.Task<bool> BajaProductoAsync(int productoId) {
            return base.Channel.BajaProductoAsync(productoId);
        }
        
        public bool ModificarProducto(MVC.ServiceReferenceProducto.ProductoDTO producto) {
            return base.Channel.ModificarProducto(producto);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarProductoAsync(MVC.ServiceReferenceProducto.ProductoDTO producto) {
            return base.Channel.ModificarProductoAsync(producto);
        }
        
        public MVC.ServiceReferenceProducto.ProductoDTO[] TraerTodos() {
            return base.Channel.TraerTodos();
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReferenceProducto.ProductoDTO[]> TraerTodosAsync() {
            return base.Channel.TraerTodosAsync();
        }
        
        public MVC.ServiceReferenceProducto.ProductoDTO BuscarProducto(int productoId) {
            return base.Channel.BuscarProducto(productoId);
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReferenceProducto.ProductoDTO> BuscarProductoAsync(int productoId) {
            return base.Channel.BuscarProductoAsync(productoId);
        }
    }
}
