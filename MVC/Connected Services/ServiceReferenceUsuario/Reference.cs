//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.ServiceReferenceUsuario {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsuarioDTO", Namespace="http://schemas.datacontract.org/2004/07/Servicio.DTO")]
    [System.SerializableAttribute()]
    public partial class UsuarioDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CI {
            get {
                return this.CIField;
            }
            set {
                if ((object.ReferenceEquals(this.CIField, value) != true)) {
                    this.CIField = value;
                    this.RaisePropertyChanged("CI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rol {
            get {
                return this.RolField;
            }
            set {
                if ((object.ReferenceEquals(this.RolField, value) != true)) {
                    this.RolField = value;
                    this.RaisePropertyChanged("Rol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceUsuario.IServicioUsuario")]
    public interface IServicioUsuario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/AltaUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/AltaUsuarioResponse")]
        bool AltaUsuario(MVC.ServiceReferenceUsuario.UsuarioDTO usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/AltaUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/AltaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> AltaUsuarioAsync(MVC.ServiceReferenceUsuario.UsuarioDTO usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/BajaUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/BajaUsuarioResponse")]
        bool BajaUsuario(int usuarioId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/BajaUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/BajaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> BajaUsuarioAsync(int usuarioId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/ModificarUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/ModificarUsuarioResponse")]
        bool ModificarUsuario(MVC.ServiceReferenceUsuario.UsuarioDTO usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/ModificarUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/ModificarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ModificarUsuarioAsync(MVC.ServiceReferenceUsuario.UsuarioDTO usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/TraerTodos", ReplyAction="http://tempuri.org/IServicioUsuario/TraerTodosResponse")]
        MVC.ServiceReferenceUsuario.UsuarioDTO[] TraerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/TraerTodos", ReplyAction="http://tempuri.org/IServicioUsuario/TraerTodosResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReferenceUsuario.UsuarioDTO[]> TraerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/BuscarUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/BuscarUsuarioResponse")]
        MVC.ServiceReferenceUsuario.UsuarioDTO BuscarUsuario(int usuarioId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/BuscarUsuario", ReplyAction="http://tempuri.org/IServicioUsuario/BuscarUsuarioResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReferenceUsuario.UsuarioDTO> BuscarUsuarioAsync(int usuarioId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/Logear", ReplyAction="http://tempuri.org/IServicioUsuario/LogearResponse")]
        MVC.ServiceReferenceUsuario.UsuarioDTO Logear(string ci, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioUsuario/Logear", ReplyAction="http://tempuri.org/IServicioUsuario/LogearResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReferenceUsuario.UsuarioDTO> LogearAsync(string ci, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioUsuarioChannel : MVC.ServiceReferenceUsuario.IServicioUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioUsuarioClient : System.ServiceModel.ClientBase<MVC.ServiceReferenceUsuario.IServicioUsuario>, MVC.ServiceReferenceUsuario.IServicioUsuario {
        
        public ServicioUsuarioClient() {
        }
        
        public ServicioUsuarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioUsuarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioUsuarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioUsuarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AltaUsuario(MVC.ServiceReferenceUsuario.UsuarioDTO usuario) {
            return base.Channel.AltaUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> AltaUsuarioAsync(MVC.ServiceReferenceUsuario.UsuarioDTO usuario) {
            return base.Channel.AltaUsuarioAsync(usuario);
        }
        
        public bool BajaUsuario(int usuarioId) {
            return base.Channel.BajaUsuario(usuarioId);
        }
        
        public System.Threading.Tasks.Task<bool> BajaUsuarioAsync(int usuarioId) {
            return base.Channel.BajaUsuarioAsync(usuarioId);
        }
        
        public bool ModificarUsuario(MVC.ServiceReferenceUsuario.UsuarioDTO usuario) {
            return base.Channel.ModificarUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarUsuarioAsync(MVC.ServiceReferenceUsuario.UsuarioDTO usuario) {
            return base.Channel.ModificarUsuarioAsync(usuario);
        }
        
        public MVC.ServiceReferenceUsuario.UsuarioDTO[] TraerTodos() {
            return base.Channel.TraerTodos();
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReferenceUsuario.UsuarioDTO[]> TraerTodosAsync() {
            return base.Channel.TraerTodosAsync();
        }
        
        public MVC.ServiceReferenceUsuario.UsuarioDTO BuscarUsuario(int usuarioId) {
            return base.Channel.BuscarUsuario(usuarioId);
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReferenceUsuario.UsuarioDTO> BuscarUsuarioAsync(int usuarioId) {
            return base.Channel.BuscarUsuarioAsync(usuarioId);
        }
        
        public MVC.ServiceReferenceUsuario.UsuarioDTO Logear(string ci, string password) {
            return base.Channel.Logear(ci, password);
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReferenceUsuario.UsuarioDTO> LogearAsync(string ci, string password) {
            return base.Channel.LogearAsync(ci, password);
        }
    }
}
